// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestIT.Models;

namespace RestIT.Migrations
{
    [DbContext(typeof(RestITContext))]
    partial class RestITContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestIT.Models.Chef", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("chefName");

                    b.HasKey("ID");

                    b.ToTable("Chef");
                });

            modelBuilder.Entity("RestIT.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("custAge");

                    b.Property<string>("custMail");

                    b.Property<string>("custName");

                    b.Property<string>("custPhone");

                    b.HasKey("ID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("RestIT.Models.Dish", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RestaurantID");

                    b.Property<int>("dishCost");

                    b.Property<string>("dishName");

                    b.Property<float>("dishRating");

                    b.Property<string>("dishType");

                    b.HasKey("ID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Dish");
                });

            modelBuilder.Entity("RestIT.Models.Restaurant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChefID");

                    b.Property<bool>("restKosher");

                    b.Property<string>("restLocation");

                    b.Property<string>("restName");

                    b.Property<float>("restRating");

                    b.Property<string>("restType");

                    b.HasKey("ID");

                    b.HasIndex("ChefID");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("RestIT.Models.Dish", b =>
                {
                    b.HasOne("RestIT.Models.Restaurant")
                        .WithMany("Dishes")
                        .HasForeignKey("RestaurantID");
                });

            modelBuilder.Entity("RestIT.Models.Restaurant", b =>
                {
                    b.HasOne("RestIT.Models.Chef")
                        .WithMany("Restuarants")
                        .HasForeignKey("ChefID");
                });
#pragma warning restore 612, 618
        }
    }
}
